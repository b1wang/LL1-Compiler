main 
var x,y,i,j; 
{
    let i<-call InputNum(); 
    let x<-0; 
    let y<-0; 
    let j<- i; 
    while x<10 do 
        let x <- i + 1; 
        let y <- j + 1; 
        while j<10 do 
            let x <- j + 1; 
            while i < 10 do 
                let y <- i + 1 
            od; 
            let j <-j + 1 
        od; 
        let i <-i + 1 
    od; 
    call OutputNum(x)
}.


Expected GraphViz:

digraph G{
BB0 [shape=record, label="<b>BB0| { 1: const #0 | 6: const #10 | 9: const #1 }}"];
BB1 [shape=record, label="<b>BB1| { 0: read }}"];
BB2 [shape=record, label="<b>BB2| { 2: phi (1) (12) | 3: phi (1) (13) | 4: phi (0) (14) | 5: phi (0) (23) | 7: cmp (2) (6) | 8: bge (7) (24) }}"];
BB3 [shape=record, label="<b>BB3| { 10: add (5) (9) | 11: add (4) (9) }}"];
BB4 [shape=record, label="<b>BB4| { 12: phi (10) (17) | 13: phi (11) (18) | 14: phi (4) (22) | 15: cmp (14) (6) | 16: bge (15) (23) }}"];
BB5 [shape=record, label="<b>BB5| { 17: add (14) (9) }}"];
BB6 [shape=record, label="<b>BB6| { 18: phi (13) (21) | 19: cmp (5) (6) | 20: bge (19) (22) }}"];
BB7 [shape=record, label="<b>BB7| { 21: add (5) (9) }}"];
BB8 [shape=record, label="<b>BB8| { 22: add (14) (9) }}"];
BB9 [shape=record, label="<b>BB9| { 23: add (5) (9) }}"];
BB10 [shape=record, label="<b>BB10| { 24: write (2) | 25: end }}"];
BB0:s -> BB1:n;
BB1:s -> BB2:n;
BB2:s -> BB3:n [label="fall-through"];
BB3:s -> BB4:n;
BB4:s -> BB5:n [label="fall-through"];
BB5:s -> BB6:n;
BB6:s -> BB7:n [label="fall-through"];
BB7:s -> BB6:n [label="fall-through"];
BB6:s -> BB8:n [label="follow"];
BB8:s -> BB4:n [label="fall-through"];
BB4:s -> BB9:n [label="follow"];
BB9:s -> BB2:n [label="fall-through"];
BB2:s -> BB10:n [label="follow"];
}
